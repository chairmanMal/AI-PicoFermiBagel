const fs = require('fs');
const path = require('path');

async function testImport() {
  console.log('üîß Testing multiplayerService import...\n');
  
  try {
    // Test if the file exists
    const filePath = path.join(__dirname, 'src/services/multiplayerService.ts');
    if (fs.existsSync(filePath)) {
      console.log('‚úÖ multiplayerService.ts file exists');
    } else {
      console.log('‚ùå multiplayerService.ts file does not exist');
      return;
    }
    
    // Read the file to check for syntax errors
    const content = fs.readFileSync(filePath, 'utf8');
    console.log('‚úÖ File can be read');
    
    // Check for the debugging logs
    if (content.includes('üîß MultiplayerService: mutations imported:')) {
      console.log('‚úÖ Debugging logs found in file');
    } else {
      console.log('‚ùå Debugging logs not found in file');
    }
    
    // Check for the getLeaderboard method
    if (content.includes('async getLeaderboard')) {
      console.log('‚úÖ getLeaderboard method found');
    } else {
      console.log('‚ùå getLeaderboard method not found');
    }
    
    // Check for the new AppSync implementation
    if (content.includes('this.client.graphql')) {
      console.log('‚úÖ AppSync implementation found');
    } else {
      console.log('‚ùå AppSync implementation not found');
    }
    
    // Check for old DynamoDB implementation
    if (content.includes('DynamoDB')) {
      console.log('‚ö†Ô∏è  Old DynamoDB implementation still present');
    } else {
      console.log('‚úÖ No old DynamoDB implementation found');
    }
    
  } catch (error) {
    console.error('‚ùå Error testing import:', error);
  }
}

testImport(); 